version: '3.8'

services:
  # メインアプリケーション
  ai-ft:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: ai-ft-rag:latest
    container_name: ai-ft-container
    hostname: ai-ft
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    environment:
      - CUDA_VISIBLE_DEVICES=0,1
      - PYTHONPATH=/workspace
      - WANDB_API_KEY=${WANDB_API_KEY:-}
      - HF_TOKEN=${HF_TOKEN:-}
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - CACHE_DEFAULT_TTL=3600
      - CACHE_ENABLE_METRICS=true
    ports:
      - "8888:8888"
      - "6006:6006"
      - "8050:8050"
      - "8051:8051"
    volumes:
      - ../src:/workspace/src
      - ../config:/workspace/config
      - ../scripts:/workspace/scripts
      - ../notebooks:/workspace/notebooks
      - ../data:/workspace/data
      - ../models:/workspace/models
      - ../tests:/workspace/tests
      - ../app:/workspace/app
      - ../templates:/workspace/templates
      - ../outputs:/workspace/outputs
      - ./logs:/workspace/logs
      - ~/.cache/huggingface:/home/ai-user/.cache/huggingface
      - ~/.wandb:/home/ai-user/.wandb
      - ../temp_uploads:/workspace/temp_uploads
      - ../qdrant_data:/workspace/qdrant_data
      - ../docs:/workspace/docs
      - ../examples:/workspace/examples
      - ai_ft_rag_metadata:/workspace/metadata
      - ai_ft_rag_processed:/workspace/outputs/rag_index
      - ./entrypoint.sh:/workspace/entrypoint.sh:ro
      - ./entrypoint_simple.sh:/workspace/entrypoint_simple.sh:ro
      - ./entrypoint_monitoring.sh:/workspace/entrypoint_monitoring.sh:ro
    working_dir: /workspace
    entrypoint: ["/bin/bash", "/workspace/entrypoint_monitoring.sh"]
    tty: true
    stdin_open: true
    restart: unless-stopped
    depends_on:
      - redis
      - qdrant
    shm_size: '32gb'
    ulimits:
      memlock:
        soft: -1
        hard: -1
      stack:
        soft: 67108864
        hard: 67108864

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: ai-ft-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__TELEMETRY_DISABLED=true
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ai-ft-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: ai-ft-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    depends_on:
      - ai-ft

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: ai-ft-grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=redis-datasource
    restart: unless-stopped
    depends_on:
      - prometheus

  # Redis Exporter (Prometheusメトリクス用)
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: ai-ft-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    restart: unless-stopped
    depends_on:
      - redis

  # Node Exporter (システムメトリクス用)
  node-exporter:
    image: prom/node-exporter:latest
    container_name: ai-ft-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped

# Networks
networks:
  default:
    name: ai-ft-network

# Volumes
volumes:
  models_data:
    driver: local
  logs_data:
    driver: local
  qdrant_storage:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  ai_ft_rag_metadata:
    driver: local
  ai_ft_rag_processed:
    driver: local
